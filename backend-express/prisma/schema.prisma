datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Table {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  name      String  @db.VarChar(50)
  positionX Int     @map("position_x") @db.UnsignedInt
  positionY Int     @map("position_y") @db.UnsignedInt
  orders    Order[]

  @@unique([positionX, positionY], map: "unique__tables__position_x__position_y")
  @@map("tables")
}

model Order {
  id                  Int         @id @default(autoincrement()) @db.UnsignedInt
  createdDateTime     DateTime    @map("created_datetime")
  lastUpdatedDateTime DateTime?   @map("last_updated_datetime")
  paidDateTime        DateTime?   @map("paid_datetime")
  itemAmount          BigInt      @default(0) @map("item_amount") @db.UnsignedBigInt
  vatAmount           BigInt      @default(0) @map("vat_amount") @db.UnsignedBigInt
  items               OrderItem[]
  tableId             Int         @map("table_id") @db.UnsignedInt
  table               Table       @relation(fields: [tableId], references: [id], map: "fk__orders__tables")

  @@map("orders")
}

model OrderItem {
  id                  Int      @id @default(autoincrement()) @db.UnsignedInt
  orderedDateTime     DateTime @map("ordered_datetime")
  lastUpdatedDateTime DateTime @map("last_updated_datetime")
  quantity            Int      @default(1) @db.UnsignedInt
  orderId             Int      @map("order_id") @db.UnsignedInt
  order               Order    @relation(fields: [orderId], references: [id], map: "fk__order_items__orders")
  menuItemId          Int      @db.UnsignedInt
  menuItem            MenuItem @relation(fields: [menuItemId], references: [id], map: "fk__order_items__menu_items")

  @@map("order_items")
}

model MenuItem {
  id                   Int           @id @default(autoincrement()) @db.UnsignedInt
  name                 String        @db.VarChar(150)
  defaultAmount        BigInt        @default(0) @map("default_amount") @db.UnsignedBigInt
  defaultVatPercentage Int           @default(0) @map("vat_amount") @db.UnsignedInt
  unit                 String        @db.VarChar(50)
  thumbnailUrl         String?       @db.VarChar(255)
  createdDateTime      DateTime      @map("created_datetime")
  lastUpdatedDateTime  DateTime?     @map("last_updated_datetime")
  categoryId           Int?          @map("category_id") @db.UnsignedInt
  category             MenuCategory? @relation(fields: [categoryId], references: [id], map: "fk__menu_items__menu_categories")
  orderItems           OrderItem[]

  @@map("menu_items")
}

model MenuCategory {
  id    Int        @id @default(autoincrement()) @db.UnsignedInt
  name  String     @unique(map: "unique__menu_catagories__name") @db.VarChar(50)
  items MenuItem[]

  @@map("menu_categories")
}

model MonthlySummary {
  id                 Int    @id @default(autoincrement()) @db.UnsignedInt
  year               Int    @db.UnsignedInt
  month              Int    @db.UnsignedInt
  revenue            BigInt @db.UnsignedBigInt
  collectedVatAmount BigInt @map("collected_vat_amount") @db.UnsignedBigInt

  @@map("monthly_summaries")
}

model User {
  id           Int             @id @default(autoincrement()) @db.UnsignedInt
  userName     String          @map("username") @db.VarChar(50)
  passwordHash String          @map("password_hash") @db.VarChar(255)
  permission   UserPermission?

  @@unique([userName], map: "unique_user_userName")
  @@map("users")
}

model UserPermission {
  id                   Int     @id @default(autoincrement()) @db.UnsignedInt
  canCreateUser        Boolean @default(false) @map("can_create_user")
  canResetUserPassword Boolean @default(false) @map("can_reset_user_password")
  canDeleteUser        Boolean @default(false) @map("can_delete_user")
  userId               Int     @unique @db.UnsignedInt
  user                 User    @relation(fields: [userId], references: [id], map: "fk__user_permissions__users")

  @@map("user_permissions")
}
